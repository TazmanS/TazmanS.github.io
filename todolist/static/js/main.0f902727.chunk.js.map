{"version":3,"sources":["store/actions.tsx","hooks/useTypedSelector.ts","components/BaseInput.tsx","components/Select.tsx","components/FilterBlock.tsx","components/BaseButton.tsx","components/BaseCheckbox.tsx","components/Time.tsx","components/ListItem.tsx","components/List.tsx","components/AddTask.tsx","App.tsx","reportWebVitals.ts","store/reducer.tsx","store/index.tsx","index.tsx"],"names":["ActionType","useTypedSelector","useSelector","StyledContainer","styled","input","BaseInput","value","change","type","onChange","event","className","select","Select","values","map","item","title","div","FilterBlock","search","setSearch","setSelect","reverseArr","setReverseArr","button","BaseButton","children","click","color","onClick","BaseCheckbox","check","id","dispatch","useDispatch","checked","CHANGE_DONE","payload","changeTask","Time","date","Date","getHours","getMinutes","getSeconds","StyledTitle","done","StyledCheckTime","span","ListItem","toString","undefined","DELETE_TASK","List","tasks","useState","selectSort","a","b","localeCompare","activeFilter","target","copyArr","concat","filter","toLowerCase","includes","sort","reverse","filters","form","AddTask","newTask","setNewTask","e","preventDefault","trim","getTime","ADD_TASK","addTask","h3","App","state","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","newArrDel","indexDel","findIndex","splice","newArrChange","indexChange","Store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f902727.chunk.js","sourcesContent":["export enum ActionType {\r\n  ADD_TASK = 'ADD_TASK',\r\n  DELETE_TASK = 'DELETE_TASK',\r\n  CHANGE_DONE = 'CHANGE_DONE'\r\n}\r\n\r\nexport const addTask = (newTask: string) => {\r\n  let date = new Date().getTime()\r\n  return {\r\n    type: ActionType.ADD_TASK,\r\n    payload: {\r\n      title: newTask,\r\n      date,\r\n      done: false\r\n    }\r\n  }\r\n}\r\n\r\nexport const deleteTask = (id: number) => {\r\n  return {\r\n    type: ActionType.DELETE_TASK,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport const changeTask = (id: number) => {\r\n  return {\r\n    type: ActionType.CHANGE_DONE,\r\n    payload: id\r\n  }\r\n}","import { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from '../store/reducer';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface BaseInputInterface {\r\n  value: string,\r\n  change(event:React.ChangeEvent<HTMLInputElement>): void\r\n}\r\n\r\nconst BaseInput:React.FC<BaseInputInterface> = ({value, change}) => {\r\n  return (\r\n    <StyledContainer \r\n      type=\"text\" \r\n      value={value} \r\n      onChange={ event => change(event)}\r\n      className=\"form-control\"\r\n    />\r\n  )\r\n}\r\n\r\nconst StyledContainer = styled.input `\r\n  font-size: 16px;\r\n  padding: 5px;\r\n`\r\n\r\nexport default BaseInput","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface SelectInterface {\r\n  value: string,\r\n  change(event:React.ChangeEvent<HTMLSelectElement>): void,\r\n  values: {\r\n    title: string,\r\n    value: string\r\n  }[]\r\n}\r\n\r\nconst Select:React.FC<SelectInterface> = ({value, change, values}) => {\r\n  return (\r\n    <StyledContainer value={value} onChange={change} className=\"form-select\">\r\n      {values.map(item => {\r\n        return (\r\n          <option \r\n            key={item.value} \r\n            value={item.value}\r\n          >\r\n            {item.title}\r\n          </option>\r\n        )\r\n      })}\r\n    </StyledContainer>\r\n  )\r\n}\r\n\r\nconst StyledContainer = styled.select `\r\n\r\n`\r\n\r\nexport default Select","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BaseInput from './BaseInput'\r\nimport Select from './Select'\r\n\r\ninterface FilterInterface {\r\n  search: string,\r\n  setSearch(event:React.ChangeEvent<HTMLInputElement>) :void,\r\n  select: string,\r\n  setSelect(event:React.ChangeEvent<HTMLSelectElement>) :void,\r\n  reverseArr: string,\r\n  setReverseArr(event:React.ChangeEvent<HTMLSelectElement>) :void\r\n}\r\n\r\nconst FilterBlock:React.FC<FilterInterface> = ({\r\n  search, setSearch, select, setSelect, reverseArr, setReverseArr\r\n}) => {\r\n\r\n  const sortValue = [\r\n    {\r\n      title: 'Date',\r\n      value: 'date'\r\n    },\r\n    {\r\n      title: 'Title',\r\n      value: 'title'\r\n    },\r\n    {\r\n      title: 'Done',\r\n      value: 'done'\r\n    },\r\n  ]\r\n\r\n  const orderValue = [\r\n    {\r\n      title: 'A-Z',\r\n      value: 'none'\r\n    },\r\n    {\r\n      title: 'Z-A',\r\n      value: 'reverse'\r\n    }\r\n  ]\r\n  \r\n  return (\r\n    <StyledContainer>\r\n      <div>\r\n        Seach: \r\n        <BaseInput \r\n          value={search} \r\n          change={setSearch} \r\n        />\r\n      </div>\r\n      <div>\r\n        Sort: \r\n        <Select \r\n          value={select} \r\n          change={setSelect}\r\n          values={sortValue}\r\n        />  \r\n      </div>\r\n      <div>\r\n        Order: \r\n        <Select \r\n          value={reverseArr} \r\n          change={setReverseArr}\r\n          values={orderValue}\r\n        />  \r\n      </div>\r\n    </StyledContainer>\r\n  )\r\n}\r\n\r\nconst StyledContainer = styled.div `\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nexport default FilterBlock","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface BaseButtonInterface {\r\n  click(): void,\r\n  color?: string\r\n}\r\n\r\nconst BaseButton:React.FC<BaseButtonInterface> = ({children, click, color = 'info'}) => {\r\n  return (\r\n    <StyledContainer onClick={click} className={`btn btn-${color}`}>\r\n      {children}\r\n    </StyledContainer>\r\n  )\r\n}\r\n\r\nconst StyledContainer = styled.button `\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n`\r\n\r\nexport default BaseButton","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {useDispatch} from 'react-redux'\r\nimport {changeTask} from '../store/actions'\r\n\r\ninterface CheckboxInterface {\r\n  check: boolean,\r\n  id: number\r\n}\r\n\r\nconst BaseCheckbox:React.FC<CheckboxInterface> = ({check, id}) => {\r\n  const dispatch = useDispatch()\r\n\r\n  function changeFunction() {\r\n    dispatch(changeTask(id))\r\n  }\r\n\r\n  return (\r\n    <StyledContainer \r\n      type=\"checkbox\" \r\n      checked={check}\r\n      onChange={changeFunction}\r\n      className=\"form-check-input\"\r\n    />\r\n  )\r\n}\r\n\r\nconst StyledContainer = styled.input `\r\n  min-width: 16px;\r\n`\r\n\r\nexport default BaseCheckbox","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface TimeInterface {\r\n  date: number\r\n}\r\n\r\nconst Time:React.FC<TimeInterface> = ({date}) => {\r\n  return (\r\n    <StyledContainer>\r\n      <div>\r\n        {new Date(date).getHours() < 10\r\n          ? '0' + new Date(date).getHours()\r\n          : new Date(date).getHours()\r\n        }: \r\n      </div>   \r\n      <div>\r\n        {new Date(date).getMinutes() < 10\r\n          ? '0' + new Date(date).getMinutes()\r\n          : new Date(date).getMinutes()\r\n        }: \r\n      </div>\r\n      <div>\r\n        {new Date(date).getSeconds() < 10\r\n          ? '0' + new Date(date).getSeconds()\r\n          : new Date(date).getSeconds()\r\n        }\r\n      </div>\r\n    </StyledContainer>\r\n  )\r\n}\r\n\r\nconst StyledContainer = styled.div `\r\n  display: flex;\r\n`\r\n\r\nexport default Time","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BaseButton from './BaseButton'\r\nimport BaseCheckbox from './BaseCheckbox'\r\nimport {useDispatch} from 'react-redux'\r\nimport {deleteTask} from '../store/actions'\r\nimport Time from './Time'\r\n\r\ninterface ListItemInterface {\r\n  item: {\r\n    title: string,\r\n    date: number,\r\n    done: boolean\r\n  }\r\n}\r\n\r\nconst ListItem:React.FC<ListItemInterface> = ({item}) => {\r\n  const dispatch = useDispatch()\r\n\r\n  function removeItem() {\r\n    dispatch(deleteTask(item.date))\r\n  }\r\n\r\n  return (\r\n    <StyledContainer className=\"listItem\">\r\n      <label>\r\n        <StyledCheckTime>\r\n          <sup><Time date={item.date}/></sup>   \r\n          <BaseCheckbox check={item.done} id={item.date}/>   \r\n        </StyledCheckTime>\r\n        <StyledTitle done={item.done ? item.done.toString() : undefined}>\r\n          {item.title}\r\n        </StyledTitle> \r\n      </label>\r\n      <BaseButton\r\n        color=\"danger\"\r\n        click={removeItem}\r\n      >\r\n        REMOVE\r\n      </BaseButton>\r\n    </StyledContainer>\r\n  )\r\n}\r\n\r\nconst StyledContainer = styled.div `\r\n  display: flex;\r\n  width: 600px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 10px auto;\r\n  padding: 0 10px;\r\n\r\n  & label {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst StyledTitle = styled.div<{done: String | undefined}> `\r\n  word-break: break-all;\r\n  margin: 0 10px;\r\n  font-size: 24px;\r\n  text-decoration: ${({done}) => done ? 'line-through' : null};\r\n`\r\n\r\nconst StyledCheckTime = styled.span `\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nexport default ListItem","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport FilterBlock from './FilterBlock'\r\nimport ListItem from './ListItem'\r\n\r\ninterface TasksInterface {\r\n  tasks: {\r\n    title: string,\r\n    date: number,\r\n    done: boolean\r\n  }[]\r\n}\r\n\r\nconst List:React.FC<TasksInterface> = ({tasks}) => {\r\n\r\n  const [search, setSearch] = useState('')\r\n  const [select, setSelect] = useState('')\r\n  const [reverseArr, setReverseArr] = useState('')\r\n\r\n  function setSearchFunction(event:React.ChangeEvent<HTMLInputElement>) {\r\n    setSearch(event.target.value)\r\n  }\r\n\r\n  function setSelectFunction(event:React.ChangeEvent<HTMLSelectElement>) {\r\n    setSelect(event.target.value)\r\n  }\r\n\r\n  function setReverseArrFunction(event:React.ChangeEvent<HTMLSelectElement>) {\r\n    setReverseArr(event.target.value)\r\n  }\r\n\r\n  function selectSort(a:any, b:any) {\r\n    if (select === 'title') {\r\n      return a.title.localeCompare(b.title)  \r\n    } else if (select === 'date') {\r\n      return a.date > b.date\r\n    }\r\n    return 0\r\n  }\r\n\r\n  function activeFilter(item:any) {\r\n    if (select === 'done') {\r\n      return item.done === true\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  function filters() {\r\n    let copyArr = tasks.concat()\r\n      .filter(item => item.title.toLowerCase().includes(search.toLowerCase()))\r\n      .filter(activeFilter)\r\n      .sort(selectSort)\r\n\r\n      if (reverseArr === 'reverse') {\r\n        return copyArr.reverse()\r\n      } else {\r\n        return copyArr\r\n      }\r\n  }\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <FilterBlock \r\n        search={search}\r\n        setSearch={setSearchFunction}\r\n        select={select}\r\n        setSelect={setSelectFunction}\r\n        reverseArr={reverseArr}\r\n        setReverseArr={setReverseArrFunction}\r\n      />\r\n      {filters()\r\n        .map((item) => {\r\n          return (\r\n            <ListItem \r\n              key={item.date}\r\n              item={item}\r\n            />\r\n          )\r\n      })}\r\n    </StyledContainer>\r\n  )\r\n}\r\n\r\nconst StyledContainer = styled.div `\r\n  margin-bottom: 30px;\r\n`\r\n\r\n\r\nexport default List","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {useDispatch} from 'react-redux'\r\nimport BaseButton from './BaseButton'\r\nimport BaseInput from './BaseInput'\r\nimport {addTask} from '../store/actions'\r\n\r\n\r\nconst AddTask = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [newTask, setNewTask] = useState('')\r\n\r\n  function addTaskFunction() {\r\n    if (newTask.trim()) {\r\n      dispatch(addTask(newTask))  \r\n    }\r\n    \r\n    setNewTask('')\r\n  }\r\n\r\n  function setNewTaskFunction(e:React.ChangeEvent<HTMLInputElement>) {\r\n    setNewTask(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <StyledContainer onClick={(e) => e.preventDefault()}>\r\n      <BaseInput value={newTask} change={setNewTaskFunction}/>\r\n      <BaseButton click={addTaskFunction}>\r\n        Add task\r\n      </BaseButton>\r\n    </StyledContainer>\r\n  )\r\n}\r\n\r\nconst StyledContainer = styled.form `\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 600px;\r\n  gap: 15px;\r\n\r\n  & input {\r\n    width: auto;\r\n  }\r\n`\r\n\r\nexport default AddTask","import React from 'react'\nimport {useTypedSelector} from './hooks/useTypedSelector'\nimport styled from 'styled-components'\nimport List from './components/List'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n  const tasks = useTypedSelector(state => state.tasks)\n  return (\n    <StyledContainer>\n      <StyledTitle>ToDo List</StyledTitle>\n      <AddTask />\n      {tasks.length > 0 \n      ? <List tasks={tasks} />\n      : <div>Sorry, you did not add any tasks</div>\n      }\n    </StyledContainer>\n  )\n}\n\nconst StyledContainer = styled.div `\n  width: 600px;\n  min-height: 300px;\n  margin: 100px auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  border: 1px solid black;\n`\n\nconst StyledTitle = styled.h3 `\n  margin-top: 30px;\n`\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ActionType } from './actions'\r\n\r\nconst initialState = {\r\n  tasks: [\r\n    {\r\n      title: 'Welcome',\r\n      date: new Date().getTime(), // id\r\n      done: false\r\n    }\r\n  ]\r\n}\r\n\r\ninterface State {\r\n  tasks: {\r\n    title: string,\r\n    date: number,\r\n    done: boolean\r\n  }[]\r\n}\r\n\r\ntype Payload = {\r\n  title: string,\r\n  date: number,\r\n  done: boolean\r\n}\r\n\r\n\r\ntype Action = \r\n  | addTask \r\n  | deleteTask\r\n  | changeTask\r\n\r\ninterface addTask {\r\n  type: ActionType.ADD_TASK,\r\n  payload: Payload\r\n}\r\n\r\ninterface deleteTask {\r\n  type: ActionType.DELETE_TASK,\r\n  payload: number\r\n}\r\n\r\ninterface changeTask {\r\n  type: ActionType.CHANGE_DONE,\r\n  payload: number\r\n}\r\n\r\nexport const reducer = (state : State = initialState, action: Action): State => {\r\n  switch (action.type) {\r\n    case ActionType.ADD_TASK: \r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.concat(action.payload)\r\n      }\r\n    \r\n    case ActionType.DELETE_TASK: \r\n      let newArrDel = state.tasks.concat()\r\n      let indexDel = newArrDel.findIndex(item => item.date === action.payload)\r\n      newArrDel.splice(indexDel, 1)\r\n      return {\r\n        ...state,\r\n        tasks: newArrDel\r\n      }\r\n\r\n    case ActionType.CHANGE_DONE: \r\n      let newArrChange = state.tasks.concat()\r\n      let indexChange = newArrChange.findIndex(item => item.date === action.payload)\r\n      newArrChange[indexChange].done = !newArrChange[indexChange].done\r\n\r\n      return {\r\n        ...state,\r\n        tasks: newArrChange\r\n      }\r\n    \r\n      default: \r\n        return {\r\n          ...state\r\n        }\r\n  }\r\n}\r\n\r\nexport type RootState = ReturnType<typeof reducer>;","import {createStore} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport {reducer} from './reducer'\r\nimport React from 'react'\r\n\r\nexport const store = createStore(reducer)\r\n\r\ninterface StoreInterface {\r\n  children: React.ReactNode\r\n}\r\n\r\nconst Store:React.FC<StoreInterface> = ({children}) => {\r\n  return( \r\n    <Provider store={store}>{children}</Provider>\r\n  )\r\n}\r\n\r\nexport default Store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Store>\n      <App />  \n    </Store>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}