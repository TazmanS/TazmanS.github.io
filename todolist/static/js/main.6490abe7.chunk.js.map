{"version":3,"sources":["Menu/Menu.js","Layout/Layout.js","actions/actionTypes.js","AddUser/AddUser.js","actions/actionUsers.js","UserList/UserList.js","UserDel/UserDel.js","UserDetail/UserDetail.js","Home/Home.js","App/App.js","serviceWorker.js","reducers/usersListReducer.js","reducers/reducer.js","store.js","index.js"],"names":["Menu","props","react_default","a","createElement","className","layout","react_router_dom","to","onClick","closeMenuHundler","Layout","state","openMenuHandler","show","_this","setState","src_Menu_Menu","this","children","React","Component","ADD_USER","GET_ACTIVE_ID","ADD_TODO_ITEM","DEL_TODO_ITEM","DEL_USER","AddUser","value","_this2","onChange","e","target","history","push","addUserHandler","connect","dispatch","type","newUserName","UserList","body","users","map","one","index","key","first_name","toLowerCase","getActiveId","todolist","length","withRouter","activeId","delUser","delIndexUser","style","margin","marginLeft","UserDetail","_this$props","id","deliteTodoItem","addTodoItem","new_todo_item","delIndexItem","cursor","App","src_Layout_Layout","react_router","path","exact","component","Home","UserDel","Boolean","window","location","hostname","match","initialState","usersListReducer","arguments","undefined","action","new_user","new_users","concat","Object","objectSpread","new_users_todo_item","new_del_users_todoitem","splice","new_del_users","reducers","combineReducers","store","createStore","applyMiddleware","reduxThunk","app","es","src_App_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6490abe7.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Menu.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nfunction Menu(props){\r\n    return(\r\n        <menu className={props.layout}>\r\n            <NavLink to=\"/todolist\" className='text-info'>На главную</NavLink>\r\n            <NavLink to=\"/todolist/adduser\" className='text-info'>Добавить пользователя</NavLink>\r\n            <NavLink to=\"/todolist/userlist\" className='text-info'>Список пользователей</NavLink>\r\n            <NavLink to=\"/todolist/userdel\" className='text-info'>Удалить пользователя</NavLink>\r\n            <button className=\"closeMenu btn btn-danger\" \r\n            onClick={props.closeMenuHundler}>Закрыть меню</button> \r\n        </menu>\r\n    )\r\n\r\n}\r\n\r\nexport default Menu\r\n\r\n","import React from 'react'\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport './Layout.css'\r\nimport Menu from '../Menu/Menu'\r\n\r\nclass Layout extends React.Component {\r\n\r\n    state = {\r\n        layout: 'Layout nav'\r\n    }\r\n\r\n    openMenuHandler = () => {\r\n        let show = this.state.layout\r\n        show += \" show\"\r\n        this.setState({\r\n            layout: show\r\n        })\r\n    }\r\n\r\n    closeMenuHundler = () => {\r\n        this.setState({\r\n            layout: \"Layout nav\"\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Router>\r\n                <Menu layout={this.state.layout} \r\n                      closeMenuHundler={this.closeMenuHundler}/>\r\n                <button className='openMenu btn btn-success'\r\n                        onClick={this.openMenuHandler}\r\n                    >Открыть меню</button> \r\n                {this.props.children}\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout","\r\n\r\nexport const ADD_USER = \"ADD_USER\";\r\nexport const GET_ACTIVE_ID = \"GET_ACTIVE_ID\"\r\nexport const ADD_TODO_ITEM = \"ADD_TODO_ITEM\"\r\nexport const DEL_TODO_ITEM = \"DEL_TODO_ITEM\"\r\nexport const DEL_USER = \"DEL_USER\"","import React from \"react\"\r\nimport {connect} from 'react-redux'\r\nimport {addUserHandler} from '../actions/actionUsers'\r\n\r\nclass AddUser extends React.Component {\r\n\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"text-center\">\r\n                <h1>Добавить пользователя</h1>\r\n                <input \r\n                    onChange={(e) => this.setState({value: e.target.value})} \r\n                    value={this.state.value}\r\n                    className=\"form-control\"/>\r\n                <br />\r\n                <button\r\n                    className=\"btn btn-warning\"\r\n                    onClick={ () => {\r\n                        this.props.history.push('/todolist/userlist/' + this.state.value)\r\n                        this.props.addUserHandler(this.state.value)\r\n                        this.setState({value: ''})\r\n                    }}\r\n                >Добавить</button>\r\n            </div>\r\n        )  \r\n    }\r\n    \r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        addUserHandler: (value) => dispatch( addUserHandler(value))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddUser)","import {ADD_USER, \r\n        GET_ACTIVE_ID, \r\n        ADD_TODO_ITEM,\r\n        DEL_TODO_ITEM,\r\n        DEL_USER} from './actionTypes'\r\n\r\nexport function addUserHandler(value){\r\n    return dispatch => {\r\n        dispatch({\r\n            type: ADD_USER,\r\n            newUserName: value\r\n        })\r\n    }\r\n}\r\n\r\nexport function getActiveId(id){\r\n    return{\r\n        type: GET_ACTIVE_ID,\r\n        activeId: id\r\n    }\r\n}\r\n\r\nexport function addTodoItem(value){\r\n    return dispatch => {\r\n        if(value.length === 0 \r\n            || value === \"\" \r\n            || value === \" \"\r\n            || value.length > 16){\r\n            return false\r\n        }\r\n        dispatch({\r\n            type: ADD_TODO_ITEM,\r\n            new_todo_item: value\r\n        })\r\n    }\r\n}\r\n\r\nexport function deliteTodoItem(index){\r\n    return{\r\n        type: DEL_TODO_ITEM,\r\n        delIndexItem: index\r\n    }\r\n}\r\n\r\nexport function delUser(index){\r\n    return{\r\n        type: DEL_USER,\r\n        delIndexUser: index\r\n    }\r\n}","import React from \"react\"\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport './UserList.css'\r\nimport {getActiveId} from '../actions/actionUsers'\r\n\r\n\r\nclass UserList extends React.Component{\r\n\r\n    render(){\r\n    const body = this.props.users.map((one, index) => {\r\n        return(\r\n            <li key={index} \r\n                className=\"UserList list-group-item\"\r\n                onClick={ () => { \r\n                    this.props.history.push('/todolist/userlist/' + one.first_name.toLowerCase() ) \r\n                    this.props.getActiveId(index)\r\n                    }}>\r\n                Имя - {one.first_name} \r\n                <br/>\r\n                Список дел - {one.todolist.length}\r\n            </li>\r\n        )\r\n    })   \r\n        return(\r\n            <div className=\"text-center\">\r\n                <h1>Список пользователей</h1>\r\n                <ul className=\"list-group\">\r\n                    {body}    \r\n                </ul>\r\n            </div>\r\n        )    \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        users: state.users.users\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        getActiveId: (index) => dispatch( getActiveId(index) )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(UserList))","import React from \"react\"\r\nimport {connect} from 'react-redux'\r\nimport {delUser} from '../actions/actionUsers'\r\n\r\nfunction UserDel(props) {\r\n\r\n    const body = props.users.map((one, index) => {\r\n        return(\r\n            <li key={index} \r\n                className=\"list-group-item\"\r\n                style={{margin: \"1px 0 0 0 \"}}>\r\n                    {one.first_name}\r\n                <button \r\n                    className=\"btn btn-danger btn-sm\"\r\n                    style={{marginLeft: '10px'}}\r\n                    onClick={()=>{\r\n                        props.delUser(index)\r\n                    }}\r\n                >Удалить</button>\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <div className='text-center'>\r\n            <h1>Удалить пользователя</h1>\r\n            <ul className=\"list-group\">\r\n                {body}    \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        users: state.users.users\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        delUser: (index) => dispatch( delUser(index) )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(UserDel)","import React from \"react\"\r\nimport {connect} from 'react-redux'\r\nimport {addTodoItem, deliteTodoItem} from '../actions/actionUsers'\r\n\r\nclass UserDetail extends React.Component {\r\n\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    render(){  \r\n        const {users, id} = this.props\r\n        const body = users[id].todolist.map((one, index) => {\r\n            return(\r\n                <li key={index} className='list-group-item' style={{margin: '1px 0 0 0'}}>\r\n                    {one}\r\n                    <button\r\n                        style={{marginLeft: \"10px\"}}\r\n                        className='btn btn-danger btn-sm'\r\n                        onClick={() => {\r\n                            this.props.deliteTodoItem(index)\r\n                        }}\r\n                    >Удалить дело</button>\r\n                </li>\r\n            )\r\n        })\r\n        \r\n        return(\r\n            <div className='text-center'>\r\n                <h1>Добро пожаловать {users[id].first_name}</h1>\r\n                <label>Добавить к списку дел:\r\n                    <input value={this.state.value}\r\n                        className=\"form-control\"\r\n                        onChange={(e) => {\r\n                            this.setState({value: e.target.value })}}/>\r\n                    <button \r\n                        className='btn btn-success'\r\n                        onClick={()=>{\r\n                            this.props.addTodoItem(this.state.value)\r\n                            this.setState({value: ''})\r\n                        }}\r\n                    >Добавить</button>    \r\n                </label>\r\n                <ul className=\"list-group\">\r\n                    {body}\r\n                </ul> \r\n            </div>\r\n        )  \r\n    }\r\n    \r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        users: state.users.users,\r\n        id: state.users.id\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        addTodoItem: (value) => dispatch( addTodoItem(value)  ),\r\n        deliteTodoItem: (index) => dispatch( deliteTodoItem(index) )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDetail)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nconst Home = (props) => {\r\n    \r\n    const body = props.users.map((one, index) => {\r\n        return(\r\n            <li key={index} className='list-group-item'\r\n                onClick={() => props.history.push( '/todolist/userlist/'+one.first_name.toLowerCase() )}\r\n                style={{ cursor: 'pointer', margin: '1px 0 0 0' }}>\r\n                {one.first_name}\r\n            </li>\r\n        )\r\n    })\r\n\r\n    if(props.users.length === 0){\r\n        return(\r\n            <div className='text-center'>\r\n                <h1>Добавьте пожалуйста пользователя</h1>  \r\n                <button className='btn btn-warning'\r\n                    onClick={()=> props.history.push( '/todolist/adduser/' )}\r\n                >Добавить</button>  \r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className='text-center'>\r\n            <h1>Добро пожаловать</h1>\r\n            <p>Выберите пользователя:</p>\r\n            <ul className=\"list-group\">\r\n                {body}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        users: state.users.users\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home)","import React, { Component } from 'react';\nimport {Route, Switch} from 'react-router-dom'\nimport Layout from '../Layout/Layout'\nimport \"./App.css\"\nimport AddUser from '../AddUser/AddUser'\nimport UserList from '../UserList/UserList'\nimport UserDel from '../UserDel/UserDel'\nimport UserDetail from '../UserDetail/UserDetail'\nimport Home from '../Home/Home'\n\n\nclass App extends Component {\n  render() { \n    return (\n      <Layout>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/todolist\" exact component={Home}/>\n            <Route path=\"/todolist/adduser\" component={AddUser} />\n            <Route path='/todolist/userlist/:first_name' component={UserDetail} />\n            <Route path=\"/todolist/userlist\" component={UserList} />\n            <Route path=\"/todolist/userdel\" component={UserDel} />\n          </Switch>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ADD_USER, \r\n        GET_ACTIVE_ID, \r\n        ADD_TODO_ITEM,\r\n        DEL_TODO_ITEM,\r\n        DEL_USER} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    id: 0,\r\n    users: [\r\n        {\r\n            first_name: \"Evgen\",\r\n            todolist: [ \"Покушать\" , \"Поспать\" , \"Попить\" ]\r\n        },\r\n        {\r\n            first_name: \"Dmitro\",\r\n            todolist: [ \"Пешая прогулка\" , \"Купить мясо\" , \"Футбол\" ]\r\n        },\r\n        {\r\n            first_name: \"Stas\",\r\n            todolist: [ \"Массаж\" , \"Рыбки\" , \"Бильярд\" ]\r\n        }\r\n    ]\r\n}\r\n\r\nconst usersListReducer = function(state = initialState, action){\r\n\r\n    switch (action.type){\r\n        case ADD_USER:\r\n            let new_user = {first_name: action.newUserName, todolist: []}\r\n            let new_users = state.users.concat()\r\n            new_users.push(new_user)\r\n            return{\r\n                ...state,\r\n                users: new_users,\r\n                id: state.users.length\r\n            }\r\n\r\n        case GET_ACTIVE_ID:\r\n            return{\r\n                ...state,\r\n                id: action.activeId\r\n            }\r\n\r\n        case ADD_TODO_ITEM:\r\n            let new_users_todo_item = state.users.concat()\r\n            new_users_todo_item[state.id].todolist.push(action.new_todo_item)\r\n            return{\r\n                ...state,\r\n                users: new_users_todo_item\r\n            }\r\n\r\n        case DEL_TODO_ITEM:\r\n            let new_del_users_todoitem = state.users.concat()\r\n            new_del_users_todoitem[state.id].todolist.splice(action.delIndexItem, 1)\r\n            return{\r\n                ...state,\r\n                users: new_del_users_todoitem\r\n            }    \r\n\r\n        case DEL_USER: \r\n            let new_del_users = state.users.concat()\r\n            new_del_users.splice(action.delIndexUser, 1)  \r\n            return{\r\n                ...state,\r\n                users: new_del_users\r\n            }\r\n\r\n\r\n        default: \r\n            return state    \r\n    }\r\n\r\n}\r\n\r\nexport default usersListReducer\r\n\r\n","import { combineReducers } from 'redux'\r\n\r\nimport usersListReducer from './usersListReducer'\r\n\r\n\r\nconst reducers = combineReducers({\r\n    users: usersListReducer\r\n})\r\n\r\n\r\n\r\n\r\n\r\nexport default reducers;","import { createStore, applyMiddleware } from 'redux'\r\nimport reducers from './reducers/reducer'\r\nimport reduxThunk from 'redux-thunk'\r\n\r\nconst store = createStore(reducers, applyMiddleware(\r\n    reduxThunk\r\n));\r\nexport default store;","import 'bootstrap/dist/css/bootstrap.min.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App/App'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport {Provider} from \"react-redux\"\nimport store from './store'\n\nconst app = \n        <Provider store={store} >\n            <App />\n        </Provider>\n\n\nReactDOM.render(app, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}