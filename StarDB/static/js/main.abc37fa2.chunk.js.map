{"version":3,"sources":["Swapi.js","Footer/Footer.js","Header/Header.js","RandomPlanet/RandomPlanet.js","Wellcome/Wellcome.js","ItemList/ItemList.js","PersonDetails/PersonDetails.js","PlanetDetails/PlanetDetails.js","StarshipDetails/StarshipDetails.js","AppBody/AppBody.js","App/App.js","reducers/displayRandomPlanet.js","reducers/appReducer.js","reducers/reducer.js","index.js"],"names":["Swapi","_apiBase","url","fetch","concat","this","res","ok","Error","json","id","getResource","Footer","react_default","a","createElement","className","Header","props","react_router_dom","to","onClick","cleanLoading","displayItems","RandomPanet","swapi","state","loading","randomPlanet","_this","setState","Math","floor","random","getPlanet","then","planet","updateRandomPlanet","_this$props","_this$props$planet","name","diameter","rotation_period","population","src","alt","React","Component","connect","displayRandomPlanet","dispatch","type","Wellcome","ItemList","item","items","map","index","key","displayItem","PersonDetails","_ref","_ref$item","gender","height","mass","eye_color","undefined","PlanetDetails","climate","StarshipDetails","passengers","length","cost_in_credits","max_atmosphering_speed","AppBody","loadingItemList","src_ItemList_ItemList","react_router","path","expect","render","src_PersonDetails_PersonDetails","src_PlanetDetails_PlanetDetails","src_StarshipDetails_StarshipDetails","App","loadingWellcome","loadingItem","getAllPeople","displayItemsUpdateState","getAllPlanet","getAllStarship","updateItems","match","join","flag","getPeople","displayItemUpdateState","getStarship","updateItem","_this$state","body","src_Wellcome_Wellcome","src_AppBody_AppBody","src_Header_Header","RandomPlanet","src_Footer_Footer","appReducer","initialState","arguments","actions","Object","objectSpread","results","reducer","combineReducers","store","createStore","app","es","src_App_App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.abc37fa2.chunk.js","sourcesContent":["\r\n\r\nexport default class Swapi {\r\n\r\n    _apiBase = \"https://swapi.co/api\"\r\n\r\n    async getResource(url){\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n        if(!res.ok){\r\n            throw new Error(\"WARNING\");\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    async getPlanet(id){\r\n        return await this.getResource(`/planets/${id}`)\r\n    }\r\n\r\n    async getPeople(id){\r\n            return await this.getResource(`/people/${id}`)\r\n        }\r\n\r\n    async getStarship(id){\r\n        return await this.getResource(`/starships/${id}`)\r\n    }\r\n\r\n    async getAllPeople(){\r\n        return await this.getResource('/people');\r\n    }\r\n\r\n    async getAllPlanet(){\r\n        return await this.getResource('/planets');\r\n    }\r\n\r\n    async getAllStarship(){\r\n        return await this.getResource('/starships');\r\n    }\r\n\r\n   \r\n\r\n    \r\n\r\n}\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className='Footer'>\r\n            Very Big Company (c)\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Header = (props) =>{\r\n    return (\r\n        <header className='Header container'>\r\n            <div className='row'>\r\n                <div className=\"HeaderLogo \r\n                col-12\r\n                col-md-4\">\r\n                    <Link to=\"/StarDB\" onClick={ props.cleanLoading }>StarDB</Link>\r\n                </div>\r\n                <div className='HeaderLinks \r\n                col-12\r\n                col-md-8'>\r\n                    <Link to=\"/StarDB/people\" onClick={() => props.displayItems(\"PEOPLE\")}>People</Link>\r\n                    <Link to=\"/StarDB/planet\" onClick={() => props.displayItems(\"PLANET\")}>Planet</Link>   \r\n                    <Link to=\"/StarDB/starship\" onClick={() => props.displayItems(\"STARSHIP\")}>Starships</Link>       \r\n                </div> \r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport Swapi from './../Swapi'\r\nimport {connect} from 'react-redux'\r\n\r\nclass RandomPanet extends React.Component {\r\n\r\n    //Обращение к API сервера \r\n    swapi = new Swapi();\r\n\r\n    //Загрузка страницы\r\n    state = {\r\n        loading: true\r\n    }\r\n\r\n    //Отображение начальной случайной планеты\r\n    componentDidMount(){\r\n        this.randomPlanet();\r\n    }\r\n\r\n    //Получение данных от API\r\n    randomPlanet = () =>{\r\n        this.setState({loading: true})\r\n        const id = Math.floor(Math.random() * 20) + 2;\r\n        this.swapi\r\n            .getPlanet(id)\r\n            .then((planet) => {\r\n                this.props.updateRandomPlanet(planet, id)\r\n                this.setState({loading: false})\r\n            })\r\n    }\r\n    \r\n\r\n    render(){\r\n    \r\n        const { planet: { name, diameter, rotation_period, population}, id } = this.props;\r\n\r\n        return (\r\n            <div className='RandomPlanet'>\r\n                <div>\r\n                    {\r\n                        this.state.loading \r\n                        ? \r\n                        <h3> Loading...  </h3> \r\n                        :\r\n                        <div className=\"RPbody container\">\r\n                            <div className='row'>\r\n                                <img src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} \r\n                                    alt=\"\" className='col-12 col-md-6'/>\r\n                                <ul className='row col-12 col-md-6'>\r\n                                    <li>Name - {name} </li>\r\n                                    <li>Diameter - {diameter} </li>\r\n                                    <li>Rotation Period - {rotation_period} </li>\r\n                                    <li>Population - {population} </li> \r\n                                    <button onClick={this.randomPlanet} className=\"btn btn-primary\">Change Planet</button>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        planet: state.displayRandomPlanet.planet, //массив с данными планеты\r\n        id: state.displayRandomPlanet.id //id плагнеты для отображения картинки\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{ //обновление планеты\r\n        updateRandomPlanet: (planet, id) => dispatch({ type: \"UPDATE\", planet, id })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(RandomPanet)\r\n\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Wellcome = (props) => {\r\n    return (\r\n        <div className=\"Wellcome container\">\r\n            <h3>Wellcome</h3>\r\n            <div className='row'>\r\n                <div className='col-12 WellcomeBody'>\r\n                    <Link to=\"/StarDB/people\" onClick={() => props.displayItems(\"PEOPLE\")}>\r\n                        People\r\n                        <img alt=\"\" src=\"https://starwars-visualguide.com/assets/img/categories/character.jpg\"/>\r\n                    </Link>\r\n                    <Link to=\"/StarDB/planet\" onClick={() => props.displayItems(\"PLANET\")}>\r\n                        Planet\r\n                        <img alt=\"\" src=\"https://starwars-visualguide.com/assets/img/categories/planets.jpg\"/>\r\n                    </Link>   \r\n                    <Link to=\"/StarDB/starship\" onClick={() => props.displayItems(\"STARSHIP\")}>\r\n                        Starships\r\n                        <img alt=\"\" src=\"https://starwars-visualguide.com/assets/img/categories/starships.jpg\"/>\r\n                    </Link>   \r\n                </div> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wellcome","import React,  {Component } from 'react'\r\n\r\nclass ItemList extends Component{\r\n   \r\n    render(){ \r\n        const item = this.props.items.map((item, index) => {\r\n            return(\r\n                <li key={index}\r\n                onClick={() => this.props.displayItem(item.url) }>\r\n                    {item.name}\r\n                </li>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className='col-12 col-md-6'>\r\n                <ul className=\"ItemList\">\r\n                    {item}\r\n                </ul>\r\n            </div>\r\n            \r\n        )  \r\n    }\r\n}\r\n\r\nexport default ItemList","import React from 'react'\r\n\r\nconst PersonDetails = ({item : {name, gender, height, mass, eye_color}, index, loading}) =>{\r\n    if( gender === undefined){\r\n        return false\r\n    }\r\n    return (\r\n        <div className=\"PersonDetails Details\">\r\n            {\r\n                loading \r\n            ? \r\n                <h3>Loading...</h3>\r\n            :\r\n                <div>\r\n                    <ul className='PersDetails'>\r\n                        <h3>People</h3>\r\n                        <img src={`https://starwars-visualguide.com/assets/img/characters/${index}.jpg`} alt=\"\" />\r\n                        <li>Name - {name}</li>\r\n                        <li>Gender - {gender}</li>\r\n                        <li>Height - {height}</li>\r\n                        <li>Mass - {mass}</li>\r\n                        <li>Eye color - {eye_color}</li>\r\n                    </ul>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonDetails","import React from 'react'\r\n\r\nconst PlanetDetails = ({item: { name, diameter, population, rotation_period, climate}, index, loading}) => {\r\n    if(diameter === undefined){\r\n        return false\r\n    }\r\n    return(\r\n        <ul className=\"PlanetDetails Details\">\r\n        {\r\n                loading \r\n            ? \r\n                <h3>Loading...</h3> \r\n            :\r\n                <div className='PlanDetails'>\r\n                    <h3>Planet</h3>\r\n                    <img src={`https://starwars-visualguide.com/assets/img/planets/${index}.jpg`} alt=\"\" />\r\n                    <li>Name - {name}</li>\r\n                    <li>Diameter - {diameter}</li>\r\n                    <li>Population - {population}</li>\r\n                    <li>Rotation_period - {rotation_period}</li>\r\n                    <li>Climate - {climate}</li>\r\n                </div>\r\n                \r\n        }\r\n            \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default PlanetDetails","import React from 'react'\r\n\r\nconst StarshipDetails = ({item : {name, passengers, length, cost_in_credits, max_atmosphering_speed}, index, loading}) => {\r\n    if( passengers === undefined){\r\n        return false\r\n    }\r\n    return(\r\n        <ul className=\"StarshipDetails Details\">\r\n        {\r\n                loading \r\n            ?\r\n                <h3>Loading...</h3>\r\n            :\r\n                <div className='StarshDetails'>\r\n                    <h3>Starship</h3>\r\n                    <img src={`https://starwars-visualguide.com/assets/img/starships/${index}.jpg`} alt=\"\" />\r\n                    <li>Name - {name}</li>\r\n                    <li>Passengers - {passengers}</li>\r\n                    <li>Length - {length}</li>\r\n                    <li>Cost In Credits - {cost_in_credits}</li>\r\n                    <li>Max Atmosphering Speed - {max_atmosphering_speed}</li>\r\n                </div>\r\n                \r\n        }\r\n        \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default StarshipDetails","import React, {Component} from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport ItemList from './../ItemList/ItemList'\r\nimport PersonDetails from \"./../PersonDetails/PersonDetails\"\r\nimport PlanetDetails from '../PlanetDetails/PlanetDetails'\r\nimport StarshipDetails from '../StarshipDetails/StarshipDetails'\r\n\r\n\r\nclass AppBody extends Component{\r\n    render(){\r\n\r\n        const {items, displayItem, item, index, loading, loadingItemList} = this.props;\r\n        \r\n        return(\r\n            <div className=\"AppBody container\">\r\n              <div className='row'>\r\n                {\r\n                  loadingItemList \r\n                  ? <h3>Loading...</h3> \r\n                  : <ItemList items={items} \r\n                              displayItem={displayItem} />\r\n                }\r\n            \r\n                <div className='col-12 col-md-6'>\r\n                  <Route  \r\n                    path=\"/StarDB/people\" expect\r\n                    render={ () => <PersonDetails item={item} \r\n                                                  index={index}\r\n                                                  loading={loading}/> } />\r\n                  <Route  \r\n                    path=\"/StarDB/planet\" expect\r\n                    render={ () => <PlanetDetails item={item} \r\n                                                  index={index}\r\n                                                  loading={loading}/> } />\r\n                  <Route  \r\n                    path=\"/StarDB/starship\" expect\r\n                    render={ () => <StarshipDetails item={item} \r\n                                                    index={index}\r\n                                                    loading={loading}/> } />\r\n                </div>\r\n              </div>\r\n          </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default AppBody","import React, { Component } from 'react';\nimport Swapi from '../Swapi'\nimport Footer from './../Footer/Footer'\nimport Header from './../Header/Header'\nimport RandomPlanet from './../RandomPlanet/RandomPlanet'\nimport Wellcome from '../Wellcome/Wellcome'\nimport AppBody from '../AppBody/AppBody'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\n\n\nclass App extends Component {\n\n  //Обращение к API сервера\n  swapi = new Swapi();\n\n  state = {\n    loadingWellcome: true,//загрузка главной страницы\n    loadingItem: true,//загрузка одиночного элемента\n    loadingItemList: true//загрузка списка элементов\n  }\n\n  cleanLoading = () => {\n    this.setState({\n      loadingWellcome: true,\n      loadingItemList: false,\n      loadingItem: true\n    })\n  }\n\n  //Получение списка\n  displayItems = (url) =>{\n\n    this.setState({loadingItemList: true, loadingWellcome: false})\n\n    if(url === 'PEOPLE'){\n      this.swapi.getAllPeople()\n        .then((items) => this.displayItemsUpdateState(items, url) )\n    }      \n        \n    else if(url === 'PLANET'){\n      this.swapi.getAllPlanet()\n        .then((items) => this.displayItemsUpdateState(items, url) )\n    }      \n        \n    else if(url === 'STARSHIP'){\n      this.swapi.getAllStarship()\n        .then((items) => this.displayItemsUpdateState(items, url) )\n    }       \n  }\n  //функция обновления state для displayItems\n  displayItemsUpdateState = (items, url) => {\n    this.props.updateItems(items, url)\n    this.setState({loadingItemList: false})\n  }\n\n  //Получение элемента\n  displayItem = (url) =>{\n\n    const reg = /[0-9]/g;\n\n    const index = url.match(reg).join(\"\");\n\n    this.setState({loadingItem: true})\n\n    if(this.props.flag === \"PEOPLE\"){\n      this.swapi.getPeople(index)\n      .then((item) => this.displayItemUpdateState(item, index) )\n    }\n\n    else if(this.props.flag === \"PLANET\"){\n      this.swapi.getPlanet(index)\n      .then((item) => this.displayItemUpdateState(item, index) )\n    }\n    \n    else if(this.props.flag === \"STARSHIP\"){\n      this.swapi.getStarship(index)\n        .then((item) => this.displayItemUpdateState(item, index) )\n    }\n  }\n  //функция обновления state для displayItem\n  displayItemUpdateState = (item, index) => {\n    this.props.updateItem(item, index)\n    this.setState({loadingItem: false})\n  }\n\n  render() {\n\n    const {items, item, index, flag} = this.props;\n    const {loadingItem, loadingItemList, loadingWellcome} = this.state;\n\n    const body = loadingWellcome\n    ? \n    <Wellcome displayItems={this.displayItems}/> \n    :\n    <AppBody loadingItemList={loadingItemList}\n             items={items}\n             displayItem={this.displayItem}\n             item={item}\n             index={index}\n             loading={loadingItem}\n             flag={flag}/>\n\n    return (\n      <Router>\n        <div className=\"App container\">\n          <div className=\"row\">\n            <div className='col-lg-12\n                            col-md-12\n                            col-sm-10\n                            col-12'>\n              <Header displayItems={this.displayItems}\n                    cleanLoading={this.cleanLoading}/>\n              <RandomPlanet />\n              {body}\n              <Footer />\n            </div>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state =>{\n  return{\n    item: state.appReducer.item,//одиночный элемент(Planet,People,Starship)\n    items: state.appReducer.items,//массив элементов(Planet,People,Starship)\n    index: state.appReducer.index,//index(id) одиночного элемента\n    flag: state.appReducer.flag,//флаг массива элементов\n  }\n}\n\nApp.propTypes = {\n  item: PropTypes.object,\n  items: PropTypes.array,\n  index: PropTypes.string,\n  flag: PropTypes.string\n}\n\nconst mapDispatchToProps = dispatch =>{\n  return{\n    updateItems: (items, url) => dispatch({type: 'ALL_ITEMS', updateItems:{items, url} }),\n    updateItem: (item, index) => dispatch({type: 'ONE_ITEM', updateItem:{item, index} })\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n\n","\r\nconst initialState = {\r\n    planet: {},\r\n    id: 3\r\n}\r\n\r\nconst displayRandomPlanet = function(state = initialState, actions){\r\n    switch(actions.type){\r\n        case \"UPDATE\":\r\n            return{\r\n                planet: actions.planet,\r\n                id: actions.id\r\n            }\r\n\r\n        default: \r\n            return state    \r\n\r\n    }\r\n}\r\n\r\nexport default displayRandomPlanet","/* eslint-disable no-fallthrough */\r\n\r\nconst initialState = {\r\n    item: {},//одиночный элемент(Planet,People,Starship)\r\n    items: [{}],//массив элементов(Planet,People,Starship)\r\n    index: null,//index(id) одиночного элемента\r\n    flag: \"\",//флаг массива элементов\r\n}\r\n\r\nconst appReducer = (state = initialState, actions) => {\r\n\r\n    switch(actions.type){\r\n            \r\n        case 'ALL_ITEMS':\r\n            return{\r\n                ...state,\r\n                items: actions.updateItems.items.results,\r\n                flag: actions.updateItems.url\r\n            }\r\n\r\n        case \"ONE_ITEM\":\r\n            return{\r\n                ...state,\r\n                item: actions.updateItem.item,\r\n                index: actions.updateItem.index\r\n            }\r\n\r\n        default: \r\n            return state    \r\n    }\r\n}\r\n\r\nexport default appReducer","import {combineReducers} from 'redux'\r\n\r\nimport displayRandomPlanet from './displayRandomPlanet'\r\nimport appReducer from './appReducer'\r\n\r\nconst reducer = combineReducers({\r\n    displayRandomPlanet,\r\n    appReducer\r\n})\r\n\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport './index.css'\nimport {Provider} from 'react-redux'\nimport {createStore} from 'redux'\nimport reducer from './reducers/reducer'\n\nconst store = createStore(reducer)\n\nconst app = <Provider store={store}>\n    <App />\n</Provider>\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n"],"sourceRoot":""}